{
  "openapi": "3.0.3",
  "info": {
    "title": "Photo Manager",
    "description": "Photo Manager API (aka Pixi)",
    "contact": {
      "email": "support@42crunch.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "4.6"
  },
  "servers": [
    {
      "url": "https://yourdomain.ngrok.app/api"
    }
  ],

  "tags": [
    {
      "name": "users",
      "description": "Operations available to regular, logged in users"
    },
    {
      "name": "anyone",
      "description": "Operations available to anyone"
    },
    {
      "name": "pictures",
      "description": "operations related to picture management"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "anyone"
        ],
        "summary": "register for an account",
        "description": "user supplies email and password to register and receives a json web token.",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully registered, token received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "maxLength": 255,
                      "minLength": 1,
                      "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
                      "type": "string"
                    },
                    "token": {
                      "maxLength": 1000,
                      "nullable": true,
                      "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
                      "type": "string"
                    },
                    "_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
                      "minLength": 36,
                      "maxLength": 36,
                      "x-42c-format": "o:uuid",
                      "example": "a83a29f5-0d63-46f2-8f2e-44c2f1d2e07e"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "email address already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "x-42c-local-strategy": {
          "x-42c-strategy": {
            "protections": [
              {
                "x-42c-set-client-ip_0.1": {
                  "ip.header.name": "X-Forwarded-For",
                  "ip.header.mandatory": true,
                  "remote.ip.allowlist": []
                }
              },
              {
                "x-42c-request-limiter_0.1": {
                  "hits": 3,
                  "window": 20,
                  "add.retry_after": true,
                  "key": "req_limiter_register"
                }
              }
            ]
          }
        },
        "x-42c-no-authentication": true
      }
    },
    "/user/info": {
      "get": {
          "tags": [
              "users"
          ],
          "summary": "get user information",
          "description": "user supplies valid token and receives all user info",
          "operationId": "GetUserInfo",
          "responses": {
              "200": {
                  "description": "successful authentication sent user information",
                  "content": {
                      "application/json": {
                          "schema": {
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                  "$ref": "#/components/schemas/UsersItem"
                              }
                          }
                      }
                  }
              },
              "403": {
                  "description": "invalid or missing token",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/AuthenticationError"
                          }
                      }
                  }
              },
              "default": {
                  "description": "unexpected error",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ErrorMessage"
                          }
                      }
                  }
              }
          },
          "security": [
              {
                  "access-token": []
              }
          ],
          "x-42c-local-strategy": {
              "x-42c-strategy": {
                  "protections": [
                      {
                          "x-42c-set-client-ip_0.1": {
                              "ip.header.name": "X-Forwarded-For",
                              "ip.header.mandatory": true,
                              "remote.ip.allowlist": []
                          }
                      },
                      {
                          "x-42c-request-limiter_0.1": {
                              "hits": 5,
                              "window": 10,
                              "add.retry_after": true,
                              "key": "req_limiter_get_info"
                          }
                      },
                      {
                          "x-42c-jwt-validation-rsa_0.2": {
                              "header.name": "x-access-token",
                              "lifetime": 600,
                              "jp.jose.header.schema": "#/x-42c-components/x-42c-schemas/jose-header",
                              "jp.claims.schema": "#/x-42c-components/x-42c-schemas/jwt-claims"
                          }
                      }
                  ]
              }
          }
      }
  },
    "/picture/file_upload": {
      "post": {
        "tags": [
          "pictures"
        ],
        "description": "Upload image file as user picture",
        "summary": "Attach picture to user account",
        "operationId": "UploadPicture",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationMessage"
                }
              }
            }
          },
          "403": {
            "description": "invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "filename",
                  "title"
                ],
                "properties": {
                  "filename": {
                    "type": "string",
                    "pattern": "^https?:\\/\\/(?:www\\.)?(?:42crunch\\.com|pixabay\\.com)\/(?:\\w+\/)*.+(.jpg|.png)$",
                    "minLength": 10,
                    "example": "https://42crunch.com/wp-content/uploads/2022/02/LogoCr1.png",
                    "maxLength": 256
                  },
                  "title": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9\\s]*$",
                    "maxLength": 100,
                    "example": "company logo"
                  }
                }
              }
            }
          },
          "description": "File to upload"
        },
        "security": [
          {
            "access-token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorMessage": {
        "required": [
          "message"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
            "type": "string"
          }
        }
      },
      "UsersItem": {
        "required": [
          "email",
          "password",
          "name",
          "_id",
          "is_admin",
          "account_balance"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "example": "DD68C630-3CCB-4FD0-9C5B-A0A34C952681",
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
            "minLength": 36,
            "maxLength": 36,
            "x-42c-format": "o:uuid"
          },
          "email": {
            "maxLength": 68,
            "minLength": 5,
            "pattern": "^\\w+(?:[\\-.]\\w+)*@[0-9A-Za-z]+(?:[\\-.][0-9A-Za-z]+)*\\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$",
            "type": "string",
            "format": "email",
            "example": "email@email.com",
            "x-42c-format": "o:email"
          },
          "password": {
            "maxLength": 64,
            "minLength": 4,
            "pattern": "^[\\w&@#!?]{4,64}$",
            "type": "string",
            "format": "string",
            "example": "p@ssword1"
          },
          "name": {
            "maxLength": 50,
            "minLength": 5,
            "pattern": "(^[\\w\\s\\.]{5,50}$)",
            "type": "string",
            "example": "Johnny Appleseed"
          },
          "is_admin": {
            "type": "boolean",
            "description": "is admin"
          },
          "account_balance": {
            "maximum": 1000,
            "minimum": -50,
            "type": "number",
            "description": "remaining balance",
            "format": "float"
          },
          "onboarding_date": {
            "type": "string",
            "maxLength": 38,
            "format": "date-time",
            "pattern": "^[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):[0-5][0-9]:(?:[0-5][0-9]|60)(?:\\.[0-9]{1,15})?(?:Z|[+\\-](?:[01][0-9]|2[0-3]):[0-5][0-9])$",
            "x-42c-format": "o:date-time",
            "example": "2021-08-30T23:01:14.274085491+15:55",
            "minLength": 20
          }
        }
      },
      "UserRegistrationData": {
        "required": [
          "account_balance",
          "is_admin",
          "name",
          "pass",
          "user"
        ],
        "type": "object",
        "additionalProperties": false,
        "example": {
          "user": "foo@test.com",
          "pass": "mygood2!pass",
          "name": "PixiUser",
          "is_admin": false,
          "account_balance": 150
        },
        "properties": {
          "user": {
            "maxLength": 68,
            "minLength": 5,
            "pattern": "^\\w+(?:[\\-.]\\w+)*@[0-9A-Za-z]+(?:[\\-.][0-9A-Za-z]+)*\\.(?:[A-Za-z][0-9A-Za-z]+|[0-9]+[A-Za-z][0-9A-Za-z]*)$",
            "type": "string",
            "format": "email",
            "example": "foo@bar.com",
            "x-42c-format": "o:email"
          },
          "pass": {
            "maxLength": 64,
            "minLength": 8,
            "pattern": "^[\\w&@#!?]{8,64}$",
            "type": "string"
          },
          "name": {
            "maxLength": 30,
            "minLength": 5,
            "pattern": "^[\\w\\s\\.]{5,30}$",
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "account_balance": {
            "maximum": 1000,
            "minimum": -50,
            "type": "number",
            "format": "float"
          }
        }
      },
      "ConfirmationMessage": {
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "Example 1": {
            "message": "photo has been attached",
            "_id": "438c0afa-e06a-4853-8636-b6acc0c52486"
          }
        },
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 1000
          },
          "_id": {
            "type": "string",
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
            "minLength": 36,
            "maxLength": 36,
            "format": "uuid",
            "x-42c-format": "o:uuid",
            "example": "a83a29f5-0d63-46f2-8f2e-44c2f1d2e07e"
          }
        }
      },
      "AuthenticationError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "^[\\w\\s\\.\\-@:,;]{1,255}$",
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ],
        "description": "403 response"
      }
    },
    "securitySchemes": {
      "access-token": {
        "type": "apiKey",
        "description": "Most operations need to pass a user token retrieved calling /api/login",
        "name": "x-access-token",
        "in": "header"
      }
    }
  },
  "x-42c-components": {
    "x-42c-schemas": {
      "jose-header": {
        "type": "object",
        "properties": {
          "alg": {
            "type": "string",
            "enum": [
              "RS384"
            ]
          },
          "typ": {
            "type": "string",
            "enum": [
              "JWT"
            ]
          }
        },
        "required": [
          "alg",
          "typ"
        ],
        "additionalProperties": false
      },
      "jwt-claims": {
        "type": "object",
        "properties": {
          "iat": {
            "type": "number"
          },
          "exp": {
            "type": "number"
          },
          "sub": {
            "type": "string",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "maxLength": 128,
            "minLength": 8
          },
          "aud": {
            "type": "string",
            "enum": [
              "pixi.42crunch.com",
              "pixiUsers"
            ]
          },
          "iss": {
            "type": "string",
            "enum": [
              "https://42c-demo",
              "https://42crunch.com",
              "https://issuer.42crunch.demo"
            ]
          },
          "user_profile": {
            "$ref": "#/components/schemas/UsersItem"
          },
          "cid": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+$",
            "maxLength": 50
          },
          "jti": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9\\-_]+$",
            "maxLength": 50
          }
        },
        "required": [
          "iat",
          "user_profile",
          "iss",
          "aud",
          "sub",
          "exp"
        ],
        "additionalProperties": false
      }
    }
  }
}