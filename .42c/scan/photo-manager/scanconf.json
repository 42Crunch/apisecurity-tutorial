{
  "version": "2.0.0",
  "runtimeConfiguration": {
    "environment": "default",
    "logLevel": "error",
    "logDestination": "stdout+platform",
    "logMaxFileSize": 2147483648,
    "requestHeaderNameRequestId": "x-scan-request-id",
    "requestHeaderNameScenarioId": "x-scan-scenario-id",
    "requestFlowrate": 100,
    "requestTimeout": 30,
    "requestTlsInsecureSkipVerify": true,
    "responseFollowRedirection": false,
    "responseMaxBodySizeScan": 10485760,
    "happyPathOnly": false,
    "maxScanDuration": 3600,
    "memoryLimit": 2147483648,
    "memoryTimeSpan": 10,
    "reportMaxHttpResponseSizeHappyPath": 8092,
    "reportMaxBodySizeHappyPath": 8092,
    "reportMaxHttpResponseSizeTest": 8092,
    "reportMaxBodySizeTest": 8092,
    "reportIssuesOnly": false,
    "reportMaxIssues": 1000,
    "reportMaxSize": 20971520,
    "reportGenerateCurlCommand": true
  },
  "customizations": {
    "happyPaths": {
      "retry": 1,
      "responsePolicy": {
        "httpStatusExpected": true,
        "mustBeConformant": true
      },
      "httpStatusExpected": [
        "2XX",
        "400",
        "404"
      ]
    },
    "tests": {
      "responsePolicy": {
        "httpStatusExpected": true,
        "mustBeConformant": true
      }
    }
  },
  "environments": {
    "default": {
      "variables": {
        "access-token": {
          "name": "SCAN42C_SECURITY_ACCESS_TOKEN",
          "from": "environment",
          "required": true
        },
        "host": {
          "name": "SCAN42C_HOST",
          "from": "environment",
          "required": false,
          "default": "http://localhost:8090/api"
        },
        "username": {
          "name": "SCAN42C_USERNAME",
          "from": "environment",
          "required": false,
          "default": "barbara8@demo.mail"
        },
        "password": {
          "name": "SCAN42C_PASSWORD",
          "from": "environment",
          "required": false,
          "default": "ball"
        }
      }
    }
  },
  "operations": {
    "CreateUser": {
      "operationId": "CreateUser",
      "request": {
        "operationId": "CreateUser",
        "request": {
          "type": "42c",
          "details": {
            "operationId": "CreateUser",
            "method": "POST",
            "url": "{{host}}/user/register",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "requestBody": {
              "mode": "json",
              "json": {
                "account_balance": 150,
                "is_admin": false,
                "name": "PixiUser",
                "pass": "mygood2!pass",
                "user": "foo@test.com"
              }
            }
          }
        },
        "defaultResponse": "200",
        "responses": {
          "200": {
            "expectations": {
              "httpStatus": 200
            }
          },
          "202": {
            "expectations": {
              "httpStatus": 202
            }
          },
          "default": {
            "expectations": {
              "httpStatus": "default"
            }
          }
        }
      },
      "scenarios": [
        {
          "key": "happy.path",
          "requests": [
            {
              "fuzzing": true,
              "$ref": "#/operations/CreateUser/request"
            }
          ],
          "fuzzing": true
        }
      ]
    },
    "GetUserInfo": {
      "operationId": "GetUserInfo",
      "request": {
        "operationId": "GetUserInfo",
        "auth": [
          "access-token"
        ],
        "request": {
          "type": "42c",
          "details": {
            "operationId": "GetUserInfo",
            "method": "GET",
            "url": "{{host}}/user/info"
          }
        },
        "defaultResponse": "200",
        "responses": {
          "200": {
            "expectations": {
              "httpStatus": 200
            }
          },
          "403": {
            "expectations": {
              "httpStatus": 403
            }
          },
          "default": {
            "expectations": {
              "httpStatus": "default"
            }
          }
        }
      },
      "scenarios": [
        {
          "key": "happy.path",
          "requests": [
            {
              "fuzzing": true,
              "$ref": "#/operations/GetUserInfo/request"
            }
          ],
          "fuzzing": true
        }
      ]
    },
    "UpdateUser": {
      "operationId": "UpdateUser",
      "request": {
        "operationId": "UpdateUser",
        "auth": [
          "access-token"
        ],
        "request": {
          "type": "42c",
          "details": {
            "operationId": "UpdateUser",
            "method": "PUT",
            "url": "{{host}}/user/edit_info",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "requestBody": {
              "mode": "json",
              "json": {
                "account_balance": 500,
                "name": "Updated User"
              }
            }
          }
        },
        "defaultResponse": "200",
        "responses": {
          "200": {
            "expectations": {
              "httpStatus": 200
            }
          },
          "403": {
            "expectations": {
              "httpStatus": 403
            }
          },
          "default": {
            "expectations": {
              "httpStatus": "default"
            }
          }
        }
      },
      "scenarios": [
        {
          "key": "happy.path",
          "requests": [
            {
              "fuzzing": true,
              "$ref": "#/operations/UpdateUser/request"
            }
          ],
          "fuzzing": true
        }
      ],
      "authorizationTests": [
        "Update-Unprivileged-User"
      ]
    },
    "UploadPicture": {
      "operationId": "UploadPicture",
      "request": {
        "operationId": "UploadPicture",
        "auth": [
          "additional-tokens"
        ],
        "request": {
          "type": "42c",
          "details": {
            "operationId": "UploadPicture",
            "method": "POST",
            "url": "{{host}}/picture/file_upload",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "requestBody": {
              "mode": "json",
              "json": {
                "filename": "https://42crunch.com/wp-content/uploads/2022/02/LogoCr1.png",
                "title": "company logo"
              }
            }
          }
        },
        "defaultResponse": "200",
        "responses": {
          "200": {
            "expectations": {
              "httpStatus": 200
            }
          },
          "403": {
            "expectations": {
              "httpStatus": 403
            }
          },
          "default": {
            "expectations": {
              "httpStatus": "default"
            }
          }
        }
      },
      "scenarios": [
        {
          "key": "happy.path",
          "requests": [
            {
              "fuzzing": true,
              "$ref": "#/operations/UploadPicture/request"
            }
          ],
          "fuzzing": true
        }
      ]
    }
  },
  "authenticationDetails": [
    {
      "access-token": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token",
        "default": "access-token",
        "credentials": {
          "access-token": {
            "credential": "{{access-token}}",
            "description": "access-token security"
          }
        }
      },
      "additional-tokens": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token",
        "default": "barbtoken",
        "description": "",
        "credentials": {
          "barbtoken": {
            "credential": "{{barb-token}}",
            "description": "",
            "requests": [
              {
                "$ref": "#/requests/UserLogin"
              }
            ]
          }
        }
      }
    }
  ],
  "authorizationTests": {
    "Update-Unprivileged-User": {
      "key": "authentication-swapping-bola",
      "source": [
        "access-token/access-token"
      ],
      "target": [
        "additional-tokens/barbtoken"
      ]
    }
  },
  "requests": {
    "UserLogin": {
      "request": {
        "type": "42c",
        "details": {
          "method": "POST",
          "url": "{{host}}/user/login",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "requestBody": {
            "mode": "json",
            "json": {
              "user": "{{username}}",
              "pass": "{{password}}"
            }
          }
        }
      },
      "defaultResponse": "200",
      "responses": {
        "200": {
          "expectations": {
            "httpStatus": 200
          },
          "variableAssignments": {
            "barb-token": {
              "in": "body",
              "from": "response",
              "contentType": "json",
              "path": {
                "type": "jsonPointer",
                "value": "/token"
              }
            }
          }
        }
      }
    }
  }
}